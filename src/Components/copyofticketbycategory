import React, { useEffect, useState } from "react";
import axios from "axios";
import {
  PieChart,
  Pie,
  Cell,
  Tooltip,
  ResponsiveContainer
} from "recharts";

// Fixed categories with default 0 value
const fixedCategories = [
  { name: 'Technical Support', value: 0 },
  { name: 'Service Outages', value: 0 },
  { name: 'Bug Reports', value: 0 },
  { name: 'General Inquiries', value: 0 },
  { name: 'Account Management', value: 0 },
  { name: 'Feature Requests', value: 0 },
  { name: 'Billing Issues', value: 0 }
];

// Unique color for each category
const COLORS = [
  '#ffe0e6', // Technical Support
  '#f4f4f4', // Service Outages
  '#ffecd9', // Bug Reports
  '#ebe0ff', // General Inquiries
  '#dbf2f2', // Account Management
  '#fff5dd', // Feature Requests
  '#d7ecfb'  // Billing Issues
];

function CategoryPieChart() {
  const [pieData, setPieData] = useState(fixedCategories);

  useEffect(() => {
    axios.get("http://localhost:8500/api/categoryTicket")
      .then((res) => {
        const apiData = res.data;

        // Merge API data with fixed category list
        const merged = fixedCategories.map(cat => {
          const match = apiData.find(item => item.name === cat.name);
          return {
            name: cat.name,
            value: match ? match.value : 0
          };
        });

        setPieData(merged);
      })
      .catch(err => {
        console.error("Error fetching category data:", err);
      });
  }, []);

  return (
    <div className="p-4">
      <h2 className="text-lg font-semibold mb-4">Category Ticket Distribution</h2>
      <ResponsiveContainer width={400} height={400}>
        <PieChart
          width={400}
          height={400}
          margin={{ top: 0, right: 0, left: 80, bottom: 80 }}
          className="PieChart_left"
        >
          <Pie
            data={pieData}
            dataKey="value"
            nameKey="name"
            cx="50%"
            cy="50%"
            innerRadius={80}
            outerRadius={150}
            fill="#8884d8"
            label
          >
            {pieData.map((entry, index) => (
              <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />
            ))}
          </Pie>
          <Tooltip />
        </PieChart>
      </ResponsiveContainer>
    </div>
  );
}

export default CategoryPieChart;